classdef TransposedConvolution2DGPUStrategy < nnet.internal.cnn.layer.util.ExecutionStrategy
    % TransposedConvolution2DGPUStrategy   
    %    Execution strategy for running the transposed convolution on the
    %    GPU.
    
    %   Copyright 2017 The MathWorks, Inc.
    
    methods
        function [Z, memory] = forward(~, X, ...
                weights, bias, ...
                verticalPad, horizontalPad, ...
                verticalStride, horizontalStride)  
            
            outputSize = ...
                nnet.internal.cnn.layer.TransposedConvolution2D.outputSize(...
                X, weights, ...
                verticalPad, horizontalPad, ...
                verticalStride, horizontalStride);
            
            Z = nnet.internal.cnngpu.convolveBackwardData2D([], weights, X, ...
                verticalPad, horizontalPad, ...
                verticalPad, horizontalPad, ...
                verticalStride, horizontalStride, outputSize);

            % add bias
            Z = arrayfun(@plus, Z, bias);   
            
            memory = [];
        end
        
        function [dX, dW] = backward(~, ...
                X, weights, dZ, ...
                verticalPad, horizontalPad, ...
                verticalStride, horizontalStride)
            
            dX = nnet.internal.cnngpu.convolveForward2D( ...
                dZ, weights, ...
                verticalPad, horizontalPad, ...
                verticalPad, horizontalPad, ...
                verticalStride, horizontalStride);
            
            needsWeightGradients = nargout > 1;
            if needsWeightGradients
                dW{1} = nnet.internal.cnngpu.convolveBackwardFilter2D( ...
                    dZ, weights, X, ...
                    verticalPad, horizontalPad, ...
                    verticalPad, horizontalPad, ...
                    verticalStride, horizontalStride);
                
                dW{2} = nnet.internal.cnngpu.convolveBackwardBias2D(dZ);
            end

        end
        
    end
end